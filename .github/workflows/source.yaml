# Relesae build
name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - '.gitignore'
      - '.dockerignore'
    branches-ignore:
      - daily
    tags:
      - '*'
# Set Env, which used by working-directory
env:
  docker-registry: docker.pkg.github.com
  ci-config-path: ci
jobs:
  build_containers:
    name: Create docker image
    strategy:
      matrix:
        container:
        - name: bionic-webrtc
          dockerfile: bionic
        - name: bionic-x86-webrtc
          dockerfile: bionic
          base: multiarch/ubuntu-core:x86-bionic
          qemu: true
        - name: bionic-arm32-webrtc
          dockerfile: bionic-arm
          base: multiarch/ubuntu-core:armhf-bionic
          qemu: true
        - name: bionic-arm64-webrtc
          dockerfile: bionic-arm
          base: multiarch/ubuntu-core:arm64-bionic
          qemu: true
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
      if: github.event_name != 'pull_request'
    - name: Setup QEMU
      run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      if: matrix.container.qemu == true
    - name: Download existing container
      run: |
        "${{ github.workspace }}/ci/getcontainer.sh" "${{ matrix.container.name }}" docker/"${{ matrix.container.dockerfile }}"
      env:
        DOCKER_REGISTRY: ${{ env.docker-registry }}
        GITHUB_TOKEN: ${{ secrets.github_token }}
      working-directory: ${{ env.ci-config-path }}
      if: github.event_name != 'pull_request'
    - name: Build and publish image
      run: |
        if [ "${{ matrix.container.base }}" != "" ]; then
          BASE_ARG="--build-arg BASE=${{ matrix.container.base }}"
        fi
        docker build -t ${{ env.docker-registry-container-sha }} ${BASE_ARG} -f ${{ env.dockerfile }} .
        docker push ${{ env.docker-registry-container-sha }}
      working-directory: ${{ env.ci-config-path }}
      if: github.event_name != 'pull_request' && env.docker-container-exists != 'true'
  build:
    strategy:
      matrix:
        platform:
        # - os: windows-latest
        # - os: macOS-11.0
        - os: macOS-11.0
          os_type: ios
        # - container:
        #     name: bionic-webrtc
        # - container:
        #     name: bionic-x86-webrtc
        #     qemu: true
        # - container:
        #     name: bionic-arm32-webrtc
        #     qemu: true
        # - container:
        #     name: bionic-arm64-webrtc
        #     qemu: true
        # - container:
        #     name: bionic-webrtc
        #   os_type: android
        # - container:
        #     name: bionic-arm32-webrtc
        #     qemu: true
        #   os_type: raspberry
        # - container:
        #     name: bionic-arm64-webrtc
        #     qemu: true
        #   os_type: raspberry
    runs-on: ${{ matrix.platform.os }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    # - run: |
    #     set path=%path%;%cd%/depot_tools
    #   if: matrix.platform.os == 'windows-latest'
    # - run: |
    #     export PATH=${PATH}:./depot_tools
    #   if: matrix.platform.os == 'macOS-11.0'
    - run: |
        # git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
        # # depot_tools/fetch --no-history --nohooks --with_branch_heads webrtc
        # # depot_tools/gclient sync --no-history --nohooks
        ci/scripts/get_dep.sh
      if: ${{ matrix.platform.container.name }} == ''

    # - name: Setup QEMU
    #   run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    #   if: matrix.platform.container.qemu == true
    # - name: Download container
    #   run: |
    #     "${{ github.workspace }}/ci/getcontainer.sh" "${{ matrix.platform.container.name }}" "${{ matrix.platform.container.dockerfile }}"
    #   env:
    #     DOCKER_REGISTRY: ${{ env.docker-registry }}
    #     GITHUB_TOKEN: ${{ secrets.github_token }}
    #   working-directory: ${{ env.docker-config-path }}
    #   if: matrix.platform.container.name != ''
    # - name: Build and test
    #   run: |
    #     export GITTEST_NEGOTIATE_PASSWORD="${{ secrets.GITTEST_NEGOTIATE_PASSWORD }}"

    #     if [ -n "${{ matrix.platform.container.name }}" ]; then
    #       docker run \
    #       ${{ env.docker-registry-container-sha }} \
    #       /bin/bash -c ""
    #     fi
    #   shell: bash
    # - name: ios build
    #   run: |
    #     ../build/ios.sh
    #   working-directory: webrtc
    #   if: ${{ matrix.platform.os_type }} = ios