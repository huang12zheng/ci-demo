# Relesae build
name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
      - '.gitignore'
      - '.dockerignore'
    branches-ignore:
      - daily
    tags:
      - '*'
# Set Env, which used by working-directory
env:
  docker-registry: docker.pkg.github.com
  ci-config-path: ci
jobs:
  build_containers:
    name: Create docker image
    strategy:
      matrix:
        container:
        # - name: bionic
        #   ## switch by job 'Build and publish image', and make it to
        #   ## RUN /root/scripts/${SCRIPT}
        #   script: apt_install_x86_64.sh
        - name: bionic-x86
          dockerfile: bionic
          base: multiarch/ubuntu-core:x86-bionic
          qemu: true
          script: apt_install_x86_64.sh
        # - name: bionic-arm32
        #   dockerfile: bionic
        #   base: multiarch/ubuntu-core:armhf-bionic
        #   qemu: true
        #   script: apt_install_arm.sh
        # - name: bionic-arm64
        #   dockerfile: bionic
        #   base: multiarch/ubuntu-core:arm64-bionic
        #   qemu: true
        #   script: apt_install_arm.sh
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
      if: github.event_name != 'pull_request'
    - name: Setup QEMU
      run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      if: matrix.container.qemu == true
    - name: Download existing container
      run: |
        "${{ github.workspace }}/ci/getcontainer.sh" "${{ matrix.container.name }}" docker/"${{ matrix.container.dockerfile }}"
      env:
        DOCKER_REGISTRY: ${{ env.docker-registry }}
        GITHUB_TOKEN: ${{ secrets.github_token }}
      working-directory: ${{ env.ci-config-path }}
      if: github.event_name != 'pull_request'
    - name: Build and publish image
      run: |
        if [ "${{ matrix.container.base }}" != "" ]; then
          BASE_ARG="--build-arg BASE=${{ matrix.container.base }}"
          SCRIPT_ARG="--build-arg SCRIPT=${{ matrix.container.script }}"
        fi
        docker build -t ${{ env.docker-registry-container-sha }} ${BASE_ARG} ${SCRIPT_ARG} -f ${{ env.dockerfile }} .
        docker push ${{ env.docker-registry-container-sha }}
      working-directory: ${{ env.ci-config-path }}
      if: github.event_name != 'pull_request' && env.docker-container-exists != 'true'
  # get_dep:
  #   strategy:
  #     matrix:
  #       platform:
  #       - os: windows-latest
  #       - os: macOS-11.0
  #       - os: ubuntu-20.04
  #   runs-on: ${{ matrix.platform.os }}
  #   steps:
  #   - run: |
  #       git clone --depth 1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
  #       export PATH=${PATH}:./depot_tools
  #       gclient
  #       fetch --no-history --nohooks webrtc